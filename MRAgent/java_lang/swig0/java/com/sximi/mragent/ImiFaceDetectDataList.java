/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sximi.mragent;

public class ImiFaceDetectDataList extends java.util.AbstractList<ImiFaceDetectData> implements java.util.RandomAccess {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public ImiFaceDetectDataList(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ImiFaceDetectDataList obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(ImiFaceDetectDataList obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mragent_data_javaJNI.delete_ImiFaceDetectDataList(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ImiFaceDetectDataList(ImiFaceDetectData[] initialElements) {
    this();
    reserve(initialElements.length);

    for (ImiFaceDetectData element : initialElements) {
      add(element);
    }
  }

  public ImiFaceDetectDataList(Iterable<ImiFaceDetectData> initialElements) {
    this();
    for (ImiFaceDetectData element : initialElements) {
      add(element);
    }
  }

  public ImiFaceDetectData get(int index) {
    return doGet(index);
  }

  public ImiFaceDetectData set(int index, ImiFaceDetectData e) {
    return doSet(index, e);
  }

  public boolean add(ImiFaceDetectData e) {
    modCount++;
    doAdd(e);
    return true;
  }

  public void add(int index, ImiFaceDetectData e) {
    modCount++;
    doAdd(index, e);
  }

  public ImiFaceDetectData remove(int index) {
    modCount++;
    return doRemove(index);
  }

  protected void removeRange(int fromIndex, int toIndex) {
    modCount++;
    doRemoveRange(fromIndex, toIndex);
  }

  public int size() {
    return doSize();
  }

  public int capacity() {
    return doCapacity();
  }

  public void reserve(int n) {
    doReserve(n);
  }

  public ImiFaceDetectDataList() {
    this(mragent_data_javaJNI.new_ImiFaceDetectDataList__SWIG_0(), true);
  }

  public ImiFaceDetectDataList(ImiFaceDetectDataList other) {
    this(mragent_data_javaJNI.new_ImiFaceDetectDataList__SWIG_1(ImiFaceDetectDataList.getCPtr(other), other), true);
  }

  public boolean isEmpty() {
    return mragent_data_javaJNI.ImiFaceDetectDataList_isEmpty(swigCPtr, this);
  }

  public void clear() {
    mragent_data_javaJNI.ImiFaceDetectDataList_clear(swigCPtr, this);
  }

  public ImiFaceDetectDataList(int count, ImiFaceDetectData value) {
    this(mragent_data_javaJNI.new_ImiFaceDetectDataList__SWIG_2(count, ImiFaceDetectData.getCPtr(value), value), true);
  }

  private int doCapacity() {
    return mragent_data_javaJNI.ImiFaceDetectDataList_doCapacity(swigCPtr, this);
  }

  private void doReserve(int n) {
    mragent_data_javaJNI.ImiFaceDetectDataList_doReserve(swigCPtr, this, n);
  }

  private int doSize() {
    return mragent_data_javaJNI.ImiFaceDetectDataList_doSize(swigCPtr, this);
  }

  private void doAdd(ImiFaceDetectData x) {
    mragent_data_javaJNI.ImiFaceDetectDataList_doAdd__SWIG_0(swigCPtr, this, ImiFaceDetectData.getCPtr(x), x);
  }

  private void doAdd(int index, ImiFaceDetectData x) {
    mragent_data_javaJNI.ImiFaceDetectDataList_doAdd__SWIG_1(swigCPtr, this, index, ImiFaceDetectData.getCPtr(x), x);
  }

  private ImiFaceDetectData doRemove(int index) {
    return new ImiFaceDetectData(mragent_data_javaJNI.ImiFaceDetectDataList_doRemove(swigCPtr, this, index), true);
  }

  private ImiFaceDetectData doGet(int index) {
    return new ImiFaceDetectData(mragent_data_javaJNI.ImiFaceDetectDataList_doGet(swigCPtr, this, index), false);
  }

  private ImiFaceDetectData doSet(int index, ImiFaceDetectData val) {
    return new ImiFaceDetectData(mragent_data_javaJNI.ImiFaceDetectDataList_doSet(swigCPtr, this, index, ImiFaceDetectData.getCPtr(val), val), true);
  }

  private void doRemoveRange(int fromIndex, int toIndex) {
    mragent_data_javaJNI.ImiFaceDetectDataList_doRemoveRange(swigCPtr, this, fromIndex, toIndex);
  }

    public ImiFaceDetectData[] toArray(){
        int n = size();
        ImiFaceDetectData[] ret = new ImiFaceDetectData[n];
        for(int i=0; i<n; i++){
            ret[i] = get(i);
        }
        return ret;
    }

}
