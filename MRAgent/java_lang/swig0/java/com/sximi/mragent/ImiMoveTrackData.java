/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sximi.mragent;

public class ImiMoveTrackData extends ImiData {
  private transient long swigCPtr;

  public ImiMoveTrackData(long cPtr, boolean cMemoryOwn) {
    super(mragent_data_javaJNI.ImiMoveTrackData_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ImiMoveTrackData obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(ImiMoveTrackData obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mragent_data_javaJNI.delete_ImiMoveTrackData(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class BallPosition {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    public BallPosition(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    public static long getCPtr(BallPosition obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    public static long swigRelease(BallPosition obj) {
      long ptr = 0;
      if (obj != null) {
        if (!obj.swigCMemOwn)
          throw new RuntimeException("Cannot release ownership as memory is not owned");
        ptr = obj.swigCPtr;
        obj.swigCMemOwn = false;
        obj.delete();
      }
      return ptr;
    }
  
    @SuppressWarnings({"deprecation", "removal"})
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          mragent_data_javaJNI.delete_ImiMoveTrackData_BallPosition(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setFRadius(float value) {
      mragent_data_javaJNI.ImiMoveTrackData_BallPosition_fRadius_set(swigCPtr, this, value);
    }
  
    public float getFRadius() {
      return mragent_data_javaJNI.ImiMoveTrackData_BallPosition_fRadius_get(swigCPtr, this);
    }
  
    public void setX(float value) {
      mragent_data_javaJNI.ImiMoveTrackData_BallPosition_x_set(swigCPtr, this, value);
    }
  
    public float getX() {
      return mragent_data_javaJNI.ImiMoveTrackData_BallPosition_x_get(swigCPtr, this);
    }
  
    public void setY(float value) {
      mragent_data_javaJNI.ImiMoveTrackData_BallPosition_y_set(swigCPtr, this, value);
    }
  
    public float getY() {
      return mragent_data_javaJNI.ImiMoveTrackData_BallPosition_y_get(swigCPtr, this);
    }
  
    public void setZ(float value) {
      mragent_data_javaJNI.ImiMoveTrackData_BallPosition_z_set(swigCPtr, this, value);
    }
  
    public float getZ() {
      return mragent_data_javaJNI.ImiMoveTrackData_BallPosition_z_get(swigCPtr, this);
    }
  
    public BallPosition() {
      this(mragent_data_javaJNI.new_ImiMoveTrackData_BallPosition(), true);
    }
  
  }

  static public class ImiBallRGBA {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    public ImiBallRGBA(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    public static long getCPtr(ImiBallRGBA obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    public static long swigRelease(ImiBallRGBA obj) {
      long ptr = 0;
      if (obj != null) {
        if (!obj.swigCMemOwn)
          throw new RuntimeException("Cannot release ownership as memory is not owned");
        ptr = obj.swigCPtr;
        obj.swigCMemOwn = false;
        obj.delete();
      }
      return ptr;
    }
  
    @SuppressWarnings({"deprecation", "removal"})
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          mragent_data_javaJNI.delete_ImiMoveTrackData_ImiBallRGBA(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setR(short value) {
      mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_r_set(swigCPtr, this, value);
    }
  
    public short getR() {
      return mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_r_get(swigCPtr, this);
    }
  
    public void setG(short value) {
      mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_g_set(swigCPtr, this, value);
    }
  
    public short getG() {
      return mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_g_get(swigCPtr, this);
    }
  
    public void setB(short value) {
      mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_b_set(swigCPtr, this, value);
    }
  
    public short getB() {
      return mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_b_get(swigCPtr, this);
    }
  
    public void setA(short value) {
      mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_a_set(swigCPtr, this, value);
    }
  
    public short getA() {
      return mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_a_get(swigCPtr, this);
    }
  
    public String toString() {
      return mragent_data_javaJNI.ImiMoveTrackData_ImiBallRGBA_toString(swigCPtr, this);
    }
  
    public ImiBallRGBA() {
      this(mragent_data_javaJNI.new_ImiMoveTrackData_ImiBallRGBA(), true);
    }
  
  }

  static public class BallInfo {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    public BallInfo(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    public static long getCPtr(BallInfo obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    public static long swigRelease(BallInfo obj) {
      long ptr = 0;
      if (obj != null) {
        if (!obj.swigCMemOwn)
          throw new RuntimeException("Cannot release ownership as memory is not owned");
        ptr = obj.swigCPtr;
        obj.swigCMemOwn = false;
        obj.delete();
      }
      return ptr;
    }
  
    @SuppressWarnings({"deprecation", "removal"})
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          mragent_data_javaJNI.delete_ImiMoveTrackData_BallInfo(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setRgb(ImiMoveTrackData.ImiBallRGBA value) {
      mragent_data_javaJNI.ImiMoveTrackData_BallInfo_rgb_set(swigCPtr, this, ImiMoveTrackData.ImiBallRGBA.getCPtr(value), value);
    }
  
    public ImiMoveTrackData.ImiBallRGBA getRgb() {
      long cPtr = mragent_data_javaJNI.ImiMoveTrackData_BallInfo_rgb_get(swigCPtr, this);
      return (cPtr == 0) ? null : new ImiMoveTrackData.ImiBallRGBA(cPtr, false);
    }
  
    public void setPos(ImiMoveTrackData.BallPosition value) {
      mragent_data_javaJNI.ImiMoveTrackData_BallInfo_pos_set(swigCPtr, this, ImiMoveTrackData.BallPosition.getCPtr(value), value);
    }
  
    public ImiMoveTrackData.BallPosition getPos() {
      long cPtr = mragent_data_javaJNI.ImiMoveTrackData_BallInfo_pos_get(swigCPtr, this);
      return (cPtr == 0) ? null : new ImiMoveTrackData.BallPosition(cPtr, false);
    }
  
    public String toString() {
      return mragent_data_javaJNI.ImiMoveTrackData_BallInfo_toString(swigCPtr, this);
    }
  
    public BallInfo() {
      this(mragent_data_javaJNI.new_ImiMoveTrackData_BallInfo(), true);
    }
  
  }

  public void setNValid(short value) {
    mragent_data_javaJNI.ImiMoveTrackData_nValid_set(swigCPtr, this, value);
  }

  public short getNValid() {
    return mragent_data_javaJNI.ImiMoveTrackData_nValid_get(swigCPtr, this);
  }

  public void setNSeq(short value) {
    mragent_data_javaJNI.ImiMoveTrackData_nSeq_set(swigCPtr, this, value);
  }

  public short getNSeq() {
    return mragent_data_javaJNI.ImiMoveTrackData_nSeq_get(swigCPtr, this);
  }

  public void setRev1(short value) {
    mragent_data_javaJNI.ImiMoveTrackData_rev1_set(swigCPtr, this, value);
  }

  public short getRev1() {
    return mragent_data_javaJNI.ImiMoveTrackData_rev1_get(swigCPtr, this);
  }

  public void setRev2(short value) {
    mragent_data_javaJNI.ImiMoveTrackData_rev2_set(swigCPtr, this, value);
  }

  public short getRev2() {
    return mragent_data_javaJNI.ImiMoveTrackData_rev2_get(swigCPtr, this);
  }

  public void setFADvoltage(float value) {
    mragent_data_javaJNI.ImiMoveTrackData_fADvoltage_set(swigCPtr, this, value);
  }

  public float getFADvoltage() {
    return mragent_data_javaJNI.ImiMoveTrackData_fADvoltage_get(swigCPtr, this);
  }

  public void setImuData(ImiVector4 value) {
    mragent_data_javaJNI.ImiMoveTrackData_imuData_set(swigCPtr, this, ImiVector4.getCPtr(value), value);
  }

  public ImiVector4 getImuData() {
    long cPtr = mragent_data_javaJNI.ImiMoveTrackData_imuData_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImiVector4(cPtr, false);
  }

  public void setBallInfo(ImiMoveTrackData.BallInfo value) {
    mragent_data_javaJNI.ImiMoveTrackData_ballInfo_set(swigCPtr, this, ImiMoveTrackData.BallInfo.getCPtr(value), value);
  }

  public ImiMoveTrackData.BallInfo getBallInfo() {
    long cPtr = mragent_data_javaJNI.ImiMoveTrackData_ballInfo_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImiMoveTrackData.BallInfo(cPtr, false);
  }

  public void setBtnState(int[] value) {
    mragent_data_javaJNI.ImiMoveTrackData_btnState_set(swigCPtr, this, value);
  }

  public int[] getBtnState() {
    return mragent_data_javaJNI.ImiMoveTrackData_btnState_get(swigCPtr, this);
}

  public String toString() {
    return mragent_data_javaJNI.ImiMoveTrackData_toString(swigCPtr, this);
  }

  public ImiMoveTrackData() {
    this(mragent_data_javaJNI.new_ImiMoveTrackData(), true);
  }

  public final static class ButtonType {
    public final static int SELECT_BUTTOON = 0;
    public final static int CROSS_BUTTOON = 1;
    public final static int MOVE_BUTTOON = 2;
    public final static int SQUARE_BUTTOON = 3;
    public final static int RESET_BUTTOON = 4;
    public final static int START_BUTTOON = 5;
    public final static int TRIANGLE_BUTTOON = 6;
    public final static int CIRCLE_BUTTOON = 7;
  }

  public final static class ButtonSate {
    public final static int BUTTOON_PRESS = 0;
    public final static int BUTTOON_LONG_PRESS = 1;
    public final static int BUTTOON_INVALID = 2;
  }

}
