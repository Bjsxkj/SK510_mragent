/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sximi.mragent;

    import com.sximi.mragent.*;
    import com.sximi.mragent.ImiBodySkeleton;

public class ImiContext {
  private transient long swigCPtr;
  protected transient boolean swigCMemOwn;

  public ImiContext(long cPtr, boolean cMemoryOwn) {
    swigCMemOwn = cMemoryOwn;
    swigCPtr = cPtr;
  }

  public static long getCPtr(ImiContext obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(ImiContext obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mragent_javaJNI.delete_ImiContext(swigCPtr);
      }
      swigCPtr = 0;
    }
  }

  public ImiContext(AppContext appContext) {
    this(mragent_javaJNI.new_ImiContext(AppContext.getCPtr(appContext), appContext), true);
  }

  public static ImiContext create(AppContext appContext) {
    long cPtr = mragent_javaJNI.ImiContext_create(AppContext.getCPtr(appContext), appContext);
    return (cPtr == 0) ? null : new ImiContext(cPtr, false);
  }

  public static ImiContext getContext() {
    long cPtr = mragent_javaJNI.ImiContext_getContext();
    return (cPtr == 0) ? null : new ImiContext(cPtr, false);
  }

  public boolean initialize(String configPath) {
    return mragent_javaJNI.ImiContext_initialize(swigCPtr, this, configPath);
  }

  public void setRemoteAddress(String address) {
    mragent_javaJNI.ImiContext_setRemoteAddress(swigCPtr, this, address);
  }

  public void release() {
    mragent_javaJNI.ImiContext_release(swigCPtr, this);
  }

  public IImiBaseDevice createDevice() {
    long cPtr = mragent_javaJNI.ImiContext_createDevice(swigCPtr, this);
    return (cPtr == 0) ? null : new IImiBaseDevice(cPtr, true);
  }

  public int getLastError() {
    return mragent_javaJNI.ImiContext_getLastError(swigCPtr, this);
  }

  public static String GetErrorString(int errCode) {
    return mragent_javaJNI.ImiContext_GetErrorString(errCode);
  }

  public int setLogConfig(LogConfig config) {
    return mragent_javaJNI.ImiContext_setLogConfig(swigCPtr, this, LogConfig.getCPtr(config), config);
  }

  public final static class LogLevel {
    public final static int LOG_DEBUG = 0;
    public final static int LOG_INFO = 1;
    public final static int LOG_ERROR = 2;
  }

}
