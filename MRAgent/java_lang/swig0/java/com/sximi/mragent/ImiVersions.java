/* ----------------------------------------------------------------------------
 * This file was automatically generated by SWIG (https://www.swig.org).
 * Version 4.3.0
 *
 * Do not make changes to this file unless you know what you are doing - modify
 * the SWIG interface file instead.
 * ----------------------------------------------------------------------------- */

package com.sximi.mragent;

public class ImiVersions extends ImiData {
  private transient long swigCPtr;

  public ImiVersions(long cPtr, boolean cMemoryOwn) {
    super(mragent_data_javaJNI.ImiVersions_SWIGUpcast(cPtr), cMemoryOwn);
    swigCPtr = cPtr;
  }

  public static long getCPtr(ImiVersions obj) {
    return (obj == null) ? 0 : obj.swigCPtr;
  }

  public static long swigRelease(ImiVersions obj) {
    long ptr = 0;
    if (obj != null) {
      if (!obj.swigCMemOwn)
        throw new RuntimeException("Cannot release ownership as memory is not owned");
      ptr = obj.swigCPtr;
      obj.swigCMemOwn = false;
      obj.delete();
    }
    return ptr;
  }

  @SuppressWarnings({"deprecation", "removal"})
  protected void finalize() {
    delete();
  }

  public synchronized void delete() {
    if (swigCPtr != 0) {
      if (swigCMemOwn) {
        swigCMemOwn = false;
        mragent_data_javaJNI.delete_ImiVersions(swigCPtr);
      }
      swigCPtr = 0;
    }
    super.delete();
  }

  static public class imi_sdk_version {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    public imi_sdk_version(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    public static long getCPtr(imi_sdk_version obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    public static long swigRelease(imi_sdk_version obj) {
      long ptr = 0;
      if (obj != null) {
        if (!obj.swigCMemOwn)
          throw new RuntimeException("Cannot release ownership as memory is not owned");
        ptr = obj.swigCPtr;
        obj.swigCMemOwn = false;
        obj.delete();
      }
      return ptr;
    }
  
    @SuppressWarnings({"deprecation", "removal"})
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          mragent_data_javaJNI.delete_ImiVersions_imi_sdk_version(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setMajor(short value) {
      mragent_data_javaJNI.ImiVersions_imi_sdk_version_major_set(swigCPtr, this, value);
    }
  
    public short getMajor() {
      return mragent_data_javaJNI.ImiVersions_imi_sdk_version_major_get(swigCPtr, this);
    }
  
    public void setMinor(short value) {
      mragent_data_javaJNI.ImiVersions_imi_sdk_version_minor_set(swigCPtr, this, value);
    }
  
    public short getMinor() {
      return mragent_data_javaJNI.ImiVersions_imi_sdk_version_minor_get(swigCPtr, this);
    }
  
    public void setRevision(SWIGTYPE_p_uint16_t value) {
      mragent_data_javaJNI.ImiVersions_imi_sdk_version_revision_set(swigCPtr, this, SWIGTYPE_p_uint16_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_uint16_t getRevision() {
      return new SWIGTYPE_p_uint16_t(mragent_data_javaJNI.ImiVersions_imi_sdk_version_revision_get(swigCPtr, this), true);
    }
  
    public String toString() {
      return mragent_data_javaJNI.ImiVersions_imi_sdk_version_toString(swigCPtr, this);
    }
  
    public imi_sdk_version() {
      this(mragent_data_javaJNI.new_ImiVersions_imi_sdk_version(), true);
    }
  
  }

  static public class imi_fw_version {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    public imi_fw_version(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    public static long getCPtr(imi_fw_version obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    public static long swigRelease(imi_fw_version obj) {
      long ptr = 0;
      if (obj != null) {
        if (!obj.swigCMemOwn)
          throw new RuntimeException("Cannot release ownership as memory is not owned");
        ptr = obj.swigCPtr;
        obj.swigCMemOwn = false;
        obj.delete();
      }
      return ptr;
    }
  
    @SuppressWarnings({"deprecation", "removal"})
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          mragent_data_javaJNI.delete_ImiVersions_imi_fw_version(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setMajor(short value) {
      mragent_data_javaJNI.ImiVersions_imi_fw_version_major_set(swigCPtr, this, value);
    }
  
    public short getMajor() {
      return mragent_data_javaJNI.ImiVersions_imi_fw_version_major_get(swigCPtr, this);
    }
  
    public void setMinor(short value) {
      mragent_data_javaJNI.ImiVersions_imi_fw_version_minor_set(swigCPtr, this, value);
    }
  
    public short getMinor() {
      return mragent_data_javaJNI.ImiVersions_imi_fw_version_minor_get(swigCPtr, this);
    }
  
    public void setRevision(SWIGTYPE_p_uint16_t value) {
      mragent_data_javaJNI.ImiVersions_imi_fw_version_revision_set(swigCPtr, this, SWIGTYPE_p_uint16_t.getCPtr(value));
    }
  
    public SWIGTYPE_p_uint16_t getRevision() {
      return new SWIGTYPE_p_uint16_t(mragent_data_javaJNI.ImiVersions_imi_fw_version_revision_get(swigCPtr, this), true);
    }
  
    public String toString() {
      return mragent_data_javaJNI.ImiVersions_imi_fw_version_toString(swigCPtr, this);
    }
  
    public imi_fw_version() {
      this(mragent_data_javaJNI.new_ImiVersions_imi_fw_version(), true);
    }
  
  }

  static public class imi_hw_version {
    private transient long swigCPtr;
    protected transient boolean swigCMemOwn;
  
    public imi_hw_version(long cPtr, boolean cMemoryOwn) {
      swigCMemOwn = cMemoryOwn;
      swigCPtr = cPtr;
    }
  
    public static long getCPtr(imi_hw_version obj) {
      return (obj == null) ? 0 : obj.swigCPtr;
    }
  
    public static long swigRelease(imi_hw_version obj) {
      long ptr = 0;
      if (obj != null) {
        if (!obj.swigCMemOwn)
          throw new RuntimeException("Cannot release ownership as memory is not owned");
        ptr = obj.swigCPtr;
        obj.swigCMemOwn = false;
        obj.delete();
      }
      return ptr;
    }
  
    @SuppressWarnings({"deprecation", "removal"})
    protected void finalize() {
      delete();
    }
  
    public synchronized void delete() {
      if (swigCPtr != 0) {
        if (swigCMemOwn) {
          swigCMemOwn = false;
          mragent_data_javaJNI.delete_ImiVersions_imi_hw_version(swigCPtr);
        }
        swigCPtr = 0;
      }
    }
  
    public void setHardware(short value) {
      mragent_data_javaJNI.ImiVersions_imi_hw_version_hardware_set(swigCPtr, this, value);
    }
  
    public short getHardware() {
      return mragent_data_javaJNI.ImiVersions_imi_hw_version_hardware_get(swigCPtr, this);
    }
  
    public void setChip(short value) {
      mragent_data_javaJNI.ImiVersions_imi_hw_version_chip_set(swigCPtr, this, value);
    }
  
    public short getChip() {
      return mragent_data_javaJNI.ImiVersions_imi_hw_version_chip_get(swigCPtr, this);
    }
  
    public void setAp_hardware(short value) {
      mragent_data_javaJNI.ImiVersions_imi_hw_version_ap_hardware_set(swigCPtr, this, value);
    }
  
    public short getAp_hardware() {
      return mragent_data_javaJNI.ImiVersions_imi_hw_version_ap_hardware_get(swigCPtr, this);
    }
  
    public void setExt(short value) {
      mragent_data_javaJNI.ImiVersions_imi_hw_version_ext_set(swigCPtr, this, value);
    }
  
    public short getExt() {
      return mragent_data_javaJNI.ImiVersions_imi_hw_version_ext_get(swigCPtr, this);
    }
  
    public String toString() {
      return mragent_data_javaJNI.ImiVersions_imi_hw_version_toString(swigCPtr, this);
    }
  
    public imi_hw_version() {
      this(mragent_data_javaJNI.new_ImiVersions_imi_hw_version(), true);
    }
  
  }

  public void setSdkVersion(ImiVersions.imi_sdk_version value) {
    mragent_data_javaJNI.ImiVersions_sdkVersion_set(swigCPtr, this, ImiVersions.imi_sdk_version.getCPtr(value), value);
  }

  public ImiVersions.imi_sdk_version getSdkVersion() {
    long cPtr = mragent_data_javaJNI.ImiVersions_sdkVersion_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImiVersions.imi_sdk_version(cPtr, false);
  }

  public void setFwVersion(ImiVersions.imi_fw_version value) {
    mragent_data_javaJNI.ImiVersions_fwVersion_set(swigCPtr, this, ImiVersions.imi_fw_version.getCPtr(value), value);
  }

  public ImiVersions.imi_fw_version getFwVersion() {
    long cPtr = mragent_data_javaJNI.ImiVersions_fwVersion_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImiVersions.imi_fw_version(cPtr, false);
  }

  public void setHwVersion(ImiVersions.imi_hw_version value) {
    mragent_data_javaJNI.ImiVersions_hwVersion_set(swigCPtr, this, ImiVersions.imi_hw_version.getCPtr(value), value);
  }

  public ImiVersions.imi_hw_version getHwVersion() {
    long cPtr = mragent_data_javaJNI.ImiVersions_hwVersion_get(swigCPtr, this);
    return (cPtr == 0) ? null : new ImiVersions.imi_hw_version(cPtr, false);
  }

  public void setUvc_color_version(String value) {
    mragent_data_javaJNI.ImiVersions_uvc_color_version_set(swigCPtr, this, value);
  }

  public String getUvc_color_version() {
    return mragent_data_javaJNI.ImiVersions_uvc_color_version_get(swigCPtr, this);
  }

  public void setBridge_fw_version(String value) {
    mragent_data_javaJNI.ImiVersions_bridge_fw_version_set(swigCPtr, this, value);
  }

  public String getBridge_fw_version() {
    return mragent_data_javaJNI.ImiVersions_bridge_fw_version_get(swigCPtr, this);
  }

  public String toString() {
    return mragent_data_javaJNI.ImiVersions_toString(swigCPtr, this);
  }

  public ImiVersions() {
    this(mragent_data_javaJNI.new_ImiVersions(), true);
  }

}
